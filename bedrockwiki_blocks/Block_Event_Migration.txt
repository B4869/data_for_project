# Block Event Migration

 * BEFORE YOU START
 This page requires you to be comfortable with basic JavaScript and requires knowledge of how modern block events work.

Struggling to upgrade your blocks' JSON events to custom components? Don't worry! This page will help you to understand what the deprecated JSON event responses look like implemented using the Script API.

## Add Mob Effect ​

- Example Mob Effect 
    Custom Component
        onStepOn({ entity }) {
            entity?.addEffect("regeneration", 30, {
                amplifier: 10,
                showParticles: false
            });
    }

## Damage (Entities) 

    - Example 1 Damage (Entities) 
        import { EntityDamageCause } from "@minecraft/server";​

    - Example 2 Damage Component 
        Custom Component

            onStepOn({ entity }) {
                entity?.applyDamage(2, {
                    cause: EntityDamageCause.drowning
                });
            }

## Damage (Items)

    - Example 1 Damage (Items) 
        import { EquipmentSlot, GameMode } from "@minecraft/server";

    -Example 2 Damage (Items)
        Custom Component
            onPlayerInteract({ player }) {
                // Get main hand slot
                if (!player) return;

                const equippable = player.getComponent("minecraft:equippable");
                if (!equippable) return;

                const mainhand = equippable.getEquipmentSlot(EquipmentSlot.Mainhand);
                if (!mainhand.hasItem()) return;

                // Apply durability damage when not in creative mode
                if (player.getGameMode() === GameMode.creative) return;

                const itemStack = mainhand.getItem(); // Allows us to get item components

                const durability = itemStack.getComponent("minecraft:durability");
                if (!durability) return;

                // Factor in unbreaking enchantment
                const enchantable = itemStack.getComponent("minecraft:enchantable");
                const unbreakingLevel = enchantable?.getEnchantment("unbreaking")?.level;

                const damageChance = durability.getDamageChance(unbreakingLevel) / 100;

                if (Math.random() > damageChance) return; // Randomly skip damage based on unbreaking level

                // Damage the item
                const shouldBreak = durability.damage === durability.maxDurability;

                if (shouldBreak) {
                    mainhand.setItem(undefined); // Remove the item
                    player.playSound("random.break"); // Play break sound
                } else {
                    durability.damage++; // Increase durability damage
                    mainhand.setItem(itemStack); // Update item in main hand
                }
            }

## Decrement Stack 

    - Example 1 Decrement
        import { EquipmentSlot, GameMode } from "@minecraft/server";

    - Example 2 Decrement  
        Custom Component
            onPlayerInteract({ player }) {
                if (!player) return;

                const equippable = player.getComponent("minecraft:equippable");
                if (!equippable) return;

                const mainhand = equippable.getEquipmentSlot(EquipmentSlot.Mainhand);
                if (!mainhand.hasItem()) return;

                if (player.getGameMode() !== GameMode.creative) {
                    if (mainhand.amount > 1) {
                        mainhand.amount--; // Remove one item from the stack
                    } else {
                        mainhand.setItem(undefined); // Remove the item stack
                    }
                }
            }

## Die (Entities)

- Example Die (Entities) 
    Custom Component

        onStepOn({ entity }) {
            entity?.kill();
        }

## Play Effect 

- Example Play Effect 
    Custom Component

        onStepOn({ dimension, block }) {
            dimension.spawnParticle("minecraft:campfire_smoke_particle", block.center());
        }

## Play Sound ​

    - Example Play Sound
        Custom Component
        
            onStepOn({ dimension, block }) {
                dimension.playSound("dig.stone", block.center());
            }

## Remove Mob Effect ​

    - Example Remove Mob Effect  
        Custom Component
        
            onStepOn({ entity }) {
                entity?.removeEffect("regeneration");
            }

## Run Command ​
    - Example Run Command 
        Custom Component

            onStepOn({ dimension }) {
                dimension.runCommand("say Hello there!");
                dimension.runCommand("say Welcome to my world!");
            }

## Set Block ​

    - Example 1 Set Block 
        Custom Component

            onStepOn({ block }) {
                block.setType("minecraft:grass_block");
            }

    - Example 2 Set Block 

    import { BlockPermutation } from "@minecraft/server";

    - Example 3 Set Block
        Custom Component

            onStepOn({ block }) {
                block.setPermutation(BlockPermutation.resolve("minecraft:campfire", {
                    "minecraft:cardinal_direction": "east",
                    "extinguished": true
                }));
            }

## Set Block at Pos 

    - Example 1 Block at Pos 
        Custom Component
            onStepOn({ dimension, block }) {
                const offset = { x: -1, y: 1, z: 5 };

                const locationWithOffset = {
                    x: block.location.x + offset.x,
                    y: block.location.y + offset.y,
                    z: block.location.z + offset.z
                };

                dimension.setBlockType(locationWithOffset, "minecraft:grass_block");
            }

    - Example 2 Block at Pos 
        import { BlockPermutation } from "@minecraft/server";

    - Example 3 Block at Pos 
        Custom Component

            onStepOn({ dimension, block }) {
                const offset = { x: -1, y: 1, z: 5 };

                const locationWithOffset = {
                    x: block.location.x + offset.x,
                    y: block.location.y + offset.y,
                    z: block.location.z + offset.z
                };

                dimension.setBlockPermutation(locationWithOffset, BlockPermutation.resolve("minecraft:campfire", {
                    "minecraft:cardinal_direction": "east",
                    "extinguished": true
                }));
            }

## Set Block State ​

    - Example 1 Set Block State ​
        Custom Component

            onStepOn({ block }) {
                block.setPermutation(
                    block.permutation.withState("wiki:integer_example", 5)
                );
            }

    - Example 2 Set Block State 
        import { BlockPermutation } from "@minecraft/server";

    - Example 3 Set Block State 
        Custom Component

            onStepOn({ block }) {
                const states = {
                    ...block.permutation.getAllStates(),
                    "wiki:boolean_example": false,
                    "wiki:integer_example": 5,
                    "wiki:string_example": "blue"
                };

                block.setPermutation(
                    BlockPermutation.resolve(block.typeId, states)
                );
        }

## Spawn Loot ​

    - Example 1 Spawn Loot 
        import { ItemStack } from "@minecraft/server";
    
    - Example 2 Spawn Loot
        Custom Component

            onStepOn({ dimension, block }) {
                dimension.spawnItem(new ItemStack("minecraft:stick", 3), block.center());
            }

    - Example 3 Spawn Loot 
        Custom Component

            onStepOn({ dimension, block }) {
                const { x, y, z } = block.center();

                dimension.runCommand(`loot spawn ${x} ${y} ${z} loot "entities/ghast"`);

## Teleport 

    - Example Teleport 
        Custom Component

            onStepOn({ entity }) {
                entity?.teleport({ x: 100, y: 20, z: 786 });
            }

## Transform Item 

    - Example 1 Transform Item 
        import { EquipmentSlot, ItemStack } from "@minecraft/server";
        
    - Example 2 Transform Item 
        Custom Component
            
            onPlayerInteract({ player }) {
                const equippable = player?.getComponent("minecraft:equippable");
                if (!equippable) return;

                const mainhand = equippable.getEquipmentSlot(EquipmentSlot.Mainhand);
                if (!mainhand.hasItem() || mainhand.typeId !== "minecraft:bowl") return;

                mainhand.setItem(new ItemStack("minecraft:suspicious_stew"));
            }






























