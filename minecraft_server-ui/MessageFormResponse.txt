# MessageFormResponse 

## Properties

selection
read-only selection?: number;

Returns the index of the button that was pushed.

Type: number

## Examples

    FormResponse

Returns data about the player results from a modal message form.

- Examples showBasicMessageForm.js

    - showBasicMessageForm.js

        import { world, DimensionLocation } from "@minecraft/server";
        import { MessageFormResponse, MessageFormData } from "@minecraft/server-ui";

        function showBasicMessageForm(log, targetLocation) {
        const players = world.getPlayers();

        const messageForm = new MessageFormData()
            .title("Message Form Example")
            .body("This shows a simple example using §o§7MessageFormData§r.")
            .button1("Button 1")
            .button2("Button 2");

        messageForm
            .show(players[0])
            .then((formData) => {
            // player canceled the form, or another dialog was up and open.
            if (formData.canceled || formData.selection === undefined) {
                return;
            }

            log(`You selected ${formData.selection === 0 ? "Button 1" : "Button 2"}`);
            })
            .catch((error) => {
            log("Failed to show form: " + error);
            return -1;
            });
        }

(preview) Work with this sample on the MCTools.dev code sandbox.

- Examples showTranslatedMessageForm.js

    - showTranslatedMessageForm.js

        import { world, DimensionLocation } from "@minecraft/server";
        import { MessageFormResponse, MessageFormData } from "@minecraft/server-ui";

        function showTranslatedMessageForm(log, targetLocation) {
        const players = world.getPlayers();

        const messageForm = new MessageFormData()
            .title({ translate: "permissions.removeplayer" })
            .body({ translate: "accessibility.list.or.two", with: ["Player 1", "Player 2"] })
            .button1("Player 1")
            .button2("Player 2");

        messageForm
            .show(players[0])
            .then((formData) => {
            // player canceled the form, or another dialog was up and open.
            if (formData.canceled || formData.selection === undefined) {
                return;
            }

            log(`You selected ${formData.selection === 0 ? "Player 1" : "Player 2"}`);
            })
            .catch((error) => {
            log("Failed to show form: " + error);
            return -1;
            });
        }

(preview) Work with this sample on the MCTools.dev code sandbox.
















































