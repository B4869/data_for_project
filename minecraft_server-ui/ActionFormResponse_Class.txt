# ActionFormResponse 

## Extends

    - FormResponse

Returns data about the player results from a modal action form.

- Examples showActionForm

    showActionForm.js

        import { world, DimensionLocation } from "@minecraft/server";
        import { ActionFormData, ActionFormResponse } from "@minecraft/server-ui";

        function log(message: string, status: number = 0) {
        console.log(`Status ${status}: ${message}`);
        }

        function showActionForm(log: (message: string, status?: number) => void, targetLocation: DimensionLocation) {
        const playerList = world.getPlayers();

        if (playerList.length >= 1) {
            const form = new ActionFormData()
            .title("Test Title")
            .body("Body text here!")
            .button("btn 1")
            .button("btn 2")
            .button("btn 3")
            .button("btn 4")
            .button("btn 5");

            form.show(playerList[0]).then((result: ActionFormResponse) => {
            if (result.canceled) {
                log("Player exited out of the dialog. Note that if the chat window is up, dialogs are automatically canceled.");
                return -1;
            } else {
                log("Your result was: " + result.selection);
            }
            });
        }
        }

(preview) Work with this sample on the MCTools.dev code sandbox.

- Examples showFavoriteMonth

    showFavoriteMonth.js

        import { world, DimensionLocation } from "@minecraft/server";
        import { ActionFormData, ActionFormResponse } from "@minecraft/server-ui";

        function showFavoriteMonth(log, targetLocation) {
        const players = world.getPlayers();

        if (players.length >= 1) {
            const form = new ActionFormData()
            .title("Months")
            .body("Choose your favorite month!")
            .button("January")
            .button("February")
            .button("March")
            .button("April")
            .button("May");

            form.show(players[0]).then((response) => {
            if (response.selection === 3) {
                log("I like April too!");
                return -1;
            }
            });
        }
        }

(preview) Work with this sample on the MCTools.dev code sandbox.


## Properties

- selection
read-only selection?: number;

 Returns the index of the button that was pushed.

Type: number

- Examples

    showActionForm.js

        - Examples showActionForm.js

            import { world, DimensionLocation } from '@minecraft/server';
            import { ActionFormData, ActionFormResponse } from '@minecraft/server-ui';

            function showActionForm(log, targetLocation) {
            const playerList = world.getPlayers();

            if (playerList.length >= 1) {
                const form = new ActionFormData()
                .title('Test Title')
                .body('Body text here!')
                .button('btn 1')
                .button('btn 2')
                .button('btn 3')
                .button('btn 4')
                .button('btn 5');

                form.show(playerList[0]).then((result) => {
                if (result.canceled) {
                    log('Player exited out of the dialog. Note that if the chat window is up, dialogs are automatically canceled.');
                    return -1;
                } else {
                    log('Your result was: ' + result.selection);
                }
                });
            }
            }

    (preview) Work with this sample on the MCTools.dev code sandbox.

    - showFavoriteMonth.js

        - Examples showFavoriteMonth.js

            import { world, DimensionLocation } from "@minecraft/server";
            import { ActionFormData, ActionFormResponse } from "@minecraft/server-ui";

            function showFavoriteMonth(log, targetLocation) {
            const players = world.getPlayers();

            if (players.length >= 1) {
                const form = new ActionFormData()
                .title("Months")
                .body("Choose your favorite month!")
                .button("January")
                .button("February")
                .button("March")
                .button("April")
                .button("May");

                form.show(players[0]).then((response) => {
                if (response.selection === 3) {
                    log("I like April too!");
                    return -1;
                }
                });
            }
            }

(preview) Work with this sample on the MCTools.dev code sandbox.
























































































































































